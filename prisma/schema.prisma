// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Asset {
  id           String        @id @map("_id")
  symbol       String
  price        Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  WalletAssets WalletAsset[]
  orders       Orders[]
}

model Wallet {
  id           String        @id @map("_id")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  WalletAssets WalletAsset[]
  orders       Orders[]
}

model WalletAsset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  Wallet    Wallet   @relation(fields: [wallet_id], references: [id])
  wallet_id String
  Asset     Asset    @relation(fields: [asset_id], references: [id])
  asset_id  String
  shares    Int      @db.Int
  version   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([wallet_id, asset_id])
}

model Orders {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  Wallet       Wallet        @relation(fields: [wallet_id], references: [id])
  wallet_id    String
  Asset        Asset         @relation(fields: [asset_id], references: [id])
  asset_id     String
  shares       Int           @db.Int
  price        Float
  type         OrdersType
  status       OrderStatus
  partial      Int
  version      Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transactions Transaction[]
}

enum OrdersType {
  BUY
  SHELL
}

enum OrderStatus {
  PENDING
  OPEN
  CLOSED
  FAILED
}

model Transaction {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  Order                 Orders   @relation(fields: [order_id], references: [id])
  order_id              String   @db.ObjectId
  broker_transaction_id String
  related_invest_id     String
  shares                Int      @db.Int
  price                 Float
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}
